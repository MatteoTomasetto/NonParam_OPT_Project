cox_threshold <- coxph(Surv(times_threshold, censoring_threshold=="Event") ~ cov1_threshold)
cov1_threshold
names(df)[37]
cov1 <- df$N.qualifying.teeth  # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov1 <- df$BL.GE  # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
df$BL.GE
library(MASS)
library(rgl)
library(DepthProc)
library(hexbin)
library(packagefinder)
library(aplpack)
library(robustbase)
library(progress)
perm_t_test_mean = function(x,y,iter=1e3){
T0=abs(mean(x)-mean(y))
T_stat=numeric(iter)
x_pooled=c(x,y)
n=length(x_pooled)
n1=length(x)
for(perm in 1:iter){
# permutation:
permutation <- sample(1:n)
x_perm <- x_pooled[permutation]
x1_perm <- x_perm[1:n1]
x2_perm <- x_perm[(n1+1):n]
# test statistic:
T_stat[perm] <- abs(mean(x1_perm) - mean(x2_perm))
}
# p-value
p_val <- sum(T_stat>=T0)/iter
return(p_val)
}
perm_t_test_median = function(x,y,iter=1e3){
T0=abs(median(x)-median(y))
T_stat=numeric(iter)
x_pooled=c(x,y)
n=length(x_pooled)
n1=length(x)
for(perm in 1:iter){
# permutation:
permutation <- sample(1:n)
x_perm <- x_pooled[permutation]
x1_perm <- x_perm[1:n1]
x2_perm <- x_perm[(n1+1):n]
# test statistic:
T_stat[perm] <- abs(median(x1_perm) - median(x2_perm))
}
# p-value
p_val <- sum(T_stat>=T0)/iter
return(p_val)
}
perm_t_test_depth = function(x,y,iter=1e3){
x_med=depthMedian(as.matrix(x),depth_params = list(method='Tukey'))
y_med=depthMedian(as.matrix(y),depth_params = list(method='Tukey'))
T0=as.numeric((x_med-y_med) %*% (x_med-y_med))
T_stat=numeric(iter)
x_pooled=rbind(x,y)
n=dim(x_pooled)[1]
n1=dim(x)[1]
for(perm in 1:iter){
# permutation:
permutation <- sample(1:n)
x_perm <- x_pooled[permutation,]
x1_perm <- x_perm[1:n1,]
x2_perm <- x_perm[(n1+1):n,]
# test statistic:
x1_med=depthMedian(as.matrix(x1_perm),depth_params = list(method='Tukey'))
x2_med=depthMedian(as.matrix(x2_perm),depth_params = list(method='Tukey'))
T_stat[perm]=as.numeric((x1_med-x2_med) %*% (x1_med-x2_med))
}
# p-value
p_val <- sum(T_stat>=T0)/iter
return(p_val)
}
perm_t_test_prop = function(x,y,iter=1e3){
T_stat=numeric(iter)
x_pooled=factor(c(x,y))
n=length(x_pooled)
n1=length(x)
T0=abs(sum(x==levels(x)[2])/n1-sum(y==levels(y)[2])/(n-n1))  # Difference of percentages of the occurrences of a factor in the 2 groups
for(perm in 1:iter){
# permutation:
permutation <- sample(1:n)
x_perm <- x_pooled[permutation]
x1_perm <- x_perm[1:n1]
x2_perm <- x_perm[(n1+1):n]
# test statistic:
T_stat[perm] <- abs(sum(x1_perm==levels(x1_perm)[1])/n1-sum(x2_perm==levels(x2_perm)[1])/(n-n1))
}
# p-value
p_val <- sum(T_stat>=T0)/iter
return(p_val)
}
perm_t_test_mean_multivariate = function(x,y,iter=1e3){
T0=as.numeric((colMeans(x)-colMeans(y)) %*% (colMeans(x)-colMeans(y)))
T_stat=numeric(iter)
x_pooled=rbind(x,y)
n=dim(x_pooled)[1]
n1=dim(x)[1]
for(perm in 1:iter){
# permutation:
permutation <- sample(1:n)
x_perm <- x_pooled[permutation,]
x1_perm <- x_perm[1:n1,]
x2_perm <- x_perm[(n1+1):n,]
# test statistic:
T_stat[perm] <- as.numeric((colMeans(x1_perm)-colMeans(x2_perm)) %*% (colMeans(x1_perm)-colMeans(x2_perm)))
}
# p-value
p_val <- sum(T_stat>=T0)/iter
return(p_val)
}
perm_anova = function(outcome,group,iter=1e3){
fit <- aov(outcome ~ group)
T0 <- summary(fit)[[1]][1,4]
T_stat <- numeric(iter)
n <- length(outcome)
for(perm in 1:iter){
# Permutation:
permutation <- sample(1:n)
outcome_perm <- outcome[permutation]
fit_perm <- aov(outcome_perm ~ group)
# Test statistic:
T_stat[perm] <- summary(fit_perm)[[1]][1,4]
}
#pvalue
p_val <- sum(T_stat>=T0)/iter
return(p_val)
}
perm_manova = function(outcome,group,iter=1e3){
fit <- manova(as.matrix(outcome) ~ group)
T0 <- -summary.manova(fit,test="Wilks")$stats[1,2]
T_stat <- numeric(iter)
n <- dim(outcome)[1]
for(perm in 1:iter){
# Permutation:
permutation <- sample(1:n)
outcome_perm <- outcome[permutation,]
fit_perm <- manova(as.matrix(outcome_perm) ~ group)
# Test statistic:
T_stat[perm] <- -summary.manova(fit_perm,test="Wilks")$stats[1,2]
}
#pvalue
p_val <- sum(T_stat>=T0)/iter
return(p_val)
}
idx_Var = 38
idx_Group = 175
groups = levels(df[,idx_Group])
# discard NA
idx_NA_Var = which(is.na(df[,idx_Var]))
idx_NA_Group = which(is.na(df[,idx_Group]))
if (length(idx_NA_Var)==0 & length(idx_NA_Group)==0){
Var_test = df[,idx_Var]
Group_test = df[,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)==0) {
Var_test = df[-idx_NA_Var,idx_Var]
Group_test = df[-idx_NA_Var,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)==0 & length(idx_NA_Group)!=0) {
Var_test = df[-idx_NA_Group,idx_Var]
Group_test = df[-idx_NA_Group,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)!=0) {
Var_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Var]
Group_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
x11()
boxplot(x,main=groups[1])
x11()
boxplot(y,main=groups[2])
perm_t_test_mean(x,y)
perm_t_test_median(x,y)
perm_anova(Var_test, Group_test)
idx_Var = 38
idx_Group = 70
groups = levels(df[,idx_Group])
# discard NA
idx_NA_Var = which(is.na(df[,idx_Var]))
idx_NA_Group = which(is.na(df[,idx_Group]))
if (length(idx_NA_Var)==0 & length(idx_NA_Group)==0){
Var_test = df[,idx_Var]
Group_test = df[,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)==0) {
Var_test = df[-idx_NA_Var,idx_Var]
Group_test = df[-idx_NA_Var,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)==0 & length(idx_NA_Group)!=0) {
Var_test = df[-idx_NA_Group,idx_Var]
Group_test = df[-idx_NA_Group,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)!=0) {
Var_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Var]
Group_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
x11()
boxplot(x,main=groups[1])
x11()
boxplot(y,main=groups[2])
perm_t_test_mean(x,y)
perm_t_test_median(x,y)
perm_anova(Var_test, Group_test)
idx_Var = 48
idx_Group = 70
groups = levels(df[,idx_Group])
# discard NA
idx_NA_Var = which(is.na(df[,idx_Var]))
idx_NA_Group = which(is.na(df[,idx_Group]))
if (length(idx_NA_Var)==0 & length(idx_NA_Group)==0){
Var_test = df[,idx_Var]
Group_test = df[,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)==0) {
Var_test = df[-idx_NA_Var,idx_Var]
Group_test = df[-idx_NA_Var,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)==0 & length(idx_NA_Group)!=0) {
Var_test = df[-idx_NA_Group,idx_Var]
Group_test = df[-idx_NA_Group,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)!=0) {
Var_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Var]
Group_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
x11()
boxplot(x,main=groups[1])
x11()
boxplot(y,main=groups[2])
perm_t_test_mean(x,y)
perm_t_test_median(x,y)
perm_anova(Var_test, Group_test)
idx_Var = 58
idx_Group = 70
groups = levels(df[,idx_Group])
# discard NA
idx_NA_Var = which(is.na(df[,idx_Var]))
idx_NA_Group = which(is.na(df[,idx_Group]))
if (length(idx_NA_Var)==0 & length(idx_NA_Group)==0){
Var_test = df[,idx_Var]
Group_test = df[,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)==0) {
Var_test = df[-idx_NA_Var,idx_Var]
Group_test = df[-idx_NA_Var,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)==0 & length(idx_NA_Group)!=0) {
Var_test = df[-idx_NA_Group,idx_Var]
Group_test = df[-idx_NA_Group,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)!=0) {
Var_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Var]
Group_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
x11()
boxplot(x,main=groups[1])
x11()
boxplot(y,main=groups[2])
perm_t_test_mean(x,y)
perm_t_test_median(x,y)
perm_anova(Var_test, Group_test)
cov1 <- df$BL.GE  # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov_values <- data.frame(cov1 = c(min(cov1),mean(cov1),max(cov1)))
KM_cov <- survfit(cox, newdata = cov_values)
plot(KM.cov, conf.int=T,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('topright', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
# Plot the survival curve for different values of a covariate
cov_values <- data.frame(cov1 = c(min(cov1),mean(cov1),max(cov1)))
KM_cov <- survfit(cox, newdata = cov_values)
plot(KM.cov, conf.int=T,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
plot(KM_cov, conf.int=T,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('topright', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
plot(KM_cov, conf.int=T,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
x11()
plot(KM_cov, conf.int=T,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
x11()
plot(KM_cov, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
df$BL.GE
cov1 <- df$V3.GE  # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov_values <- data.frame(cov1 = c(min(cov1),mean(cov1),max(cov1)))
KM_cov <- survfit(cox, newdata = cov_values)
x11()
plot(KM_cov, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
cov1 <- df$V5.GE  # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov_values <- data.frame(cov1 = c(min(cov1),mean(cov1),max(cov1)))
KM_cov <- survfit(cox, newdata = cov_values)
x11()
plot(KM_cov, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
cov1_threshold <- df$BL.GE[which(times <= threshold)]  # select covariates significant for the delivery time (see permutational inference results)
cox_threshold <- coxph(Surv(times_threshold, censoring_threshold=="Event") ~ cov1_threshold)
summary(cox_threshold)
cov_values_threshold <- data.frame(cov1_threshold = c(min(cov1_threshold),mean(cov1_threshold),max(cov1_threshold)))
KM_cov_threshold <- survfit(cox_threshold, newdata = cov_values_threshold)
x11()
plot(KM_cov_threshold, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
cov1 <- df$Bacteria5.perc  # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov_values <- data.frame(cov1 = c(min(cov1),mean(cov1),max(cov1)))
KM_cov <- survfit(cox, newdata = cov_values)
x11()
plot(KM_cov, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
cov1_threshold <- df$Bacteria5.perc[which(times <= threshold)]  # select covariates significant for the delivery time (see permutational inference results)
cox_threshold <- coxph(Surv(times_threshold, censoring_threshold=="Event") ~ cov1_threshold)
summary(cox_threshold)
### Consider the pre-term births only
cov1_threshold <- df$Bacteria5.perc[which(times <= threshold)]  # select covariates significant for the delivery time (see permutational inference results)
cox_threshold <- coxph(Surv(times_threshold, censoring_threshold=="Event") ~ cov1_threshold)
cov1 <- df$BL.Calc.I  # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov_values <- data.frame(cov1 = c(min(cov1),mean(cov1),max(cov1)))
KM_cov <- survfit(cox, newdata = cov_values)
x11()
plot(KM_cov, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
cov1_threshold <- df$BL.Calc.I[which(times <= threshold)]  # select covariates significant for the delivery time (see permutational inference results)
cox_threshold <- coxph(Surv(times_threshold, censoring_threshold=="Event") ~ cov1_threshold)
summary(cox_threshold)
cov_values_threshold <- data.frame(cov1_threshold = c(min(cov1_threshold),mean(cov1_threshold),max(cov1_threshold)))
KM_cov_threshold <- survfit(cox_threshold, newdata = cov_values_threshold)
x11()
plot(KM_cov_threshold, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
cov1 <- df$BL.Pl.I  # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
idx_Var = 46
idx_Group = 70
groups = levels(df[,idx_Group])
# discard NA
idx_NA_Var = which(is.na(df[,idx_Var]))
idx_NA_Group = which(is.na(df[,idx_Group]))
if (length(idx_NA_Var)==0 & length(idx_NA_Group)==0){
Var_test = df[,idx_Var]
Group_test = df[,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)==0) {
Var_test = df[-idx_NA_Var,idx_Var]
Group_test = df[-idx_NA_Var,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)==0 & length(idx_NA_Group)!=0) {
Var_test = df[-idx_NA_Group,idx_Var]
Group_test = df[-idx_NA_Group,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)!=0) {
Var_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Var]
Group_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
x11()
boxplot(x,main=groups[1])
x11()
boxplot(y,main=groups[2])
perm_t_test_mean(x,y)
perm_t_test_median(x,y)
perm_anova(Var_test, Group_test)
idx_Var = 47
idx_Group = 70
groups = levels(df[,idx_Group])
# discard NA
idx_NA_Var = which(is.na(df[,idx_Var]))
idx_NA_Group = which(is.na(df[,idx_Group]))
if (length(idx_NA_Var)==0 & length(idx_NA_Group)==0){
Var_test = df[,idx_Var]
Group_test = df[,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)==0) {
Var_test = df[-idx_NA_Var,idx_Var]
Group_test = df[-idx_NA_Var,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)==0 & length(idx_NA_Group)!=0) {
Var_test = df[-idx_NA_Group,idx_Var]
Group_test = df[-idx_NA_Group,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)!=0) {
Var_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Var]
Group_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
x11()
boxplot(x,main=groups[1])
x11()
boxplot(y,main=groups[2])
perm_t_test_mean(x,y)
perm_t_test_median(x,y)
perm_anova(Var_test, Group_test)
