Var_test = df[-idx_NA_Var,idx_Var]
Group_test = df[-idx_NA_Var,idx_Group]
x = Var_test[which(Group_test==groups[1]),]
y = Var_test[which(Group_test==groups[2]),]
# visualize and compute di correlation matrices
corr_matrix_x <- correlation_matrix(x)
corr_matrix_y <- correlation_matrix(y)
norm(corr_matrix_x)
norm(corr_matrix_y)
image(corr_matrix_x)
image(corr_matrix_y)
# test
iter = 1e3
matrix_x_obs <- correlation_matrix(x)
matrix_y_obs <- correlation_matrix(y)
T0 <- sqrt(sum((matrix_x_obs - matrix_y_obs)^2))
# T0 <- 1 - sum(diag(matrix_x_obs*matrix_y_obs))/(norm(matrix_x_obs,"F")*norm(matrix_y_obs,"F"))
x_pooled <- rbind(x,y)
T_stat <- numeric(iter)
n <- dim(x_pooled)[1]
n1 <- dim(x)[1]
for(perm in 1:iter){
# Permutation:
permutation <- sample(1:n)
x_pooled_perm <- x_pooled[permutation,]
x_perm <- x_pooled_perm[1:n1,]
y_perm <- x_pooled_perm[(n1+1):n,]
matrix_x_perm <- correlation_matrix(x_perm)
matrix_y_perm <- correlation_matrix(y_perm)
T_stat[perm] <- sqrt(sum((matrix_x_perm - matrix_y_perm)^2))
# T_stat[perm] <- 1 - sum(diag(matrix_x_perm*matrix_y_perm))/(norm(matrix_x_perm,"F")*norm(matrix_y_perm,"F"))
}
#pvalue
p_val <- sum(na.omit(T_stat)>=T0)/(iter-sum(is.na(T_stat)))
p_val
idx_Var = c(12,13,48,50,173,155)
idx_Group = 3
groups = levels(df[,idx_Group])
# discard NA
idx_NA_Var = c()
for (i in 1:length(idx_Var)){
idx_NA_Var = c(idx_NA_Var, which(is.na(df[,idx_Var[i]])))
}
idx_NA_Var = sort(unique(idx_NA_Var))
Var_test = df[-idx_NA_Var,idx_Var]
Group_test = df[-idx_NA_Var,idx_Group]
x = Var_test[which(Group_test==groups[1]),]
y = Var_test[which(Group_test==groups[2]),]
# visualize and compute di correlation matrices
corr_matrix_x <- correlation_matrix(x)
corr_matrix_y <- correlation_matrix(y)
norm(corr_matrix_x)
norm(corr_matrix_y)
image(corr_matrix_x)
image(corr_matrix_y)
# test
iter = 1e3
matrix_x_obs <- correlation_matrix(x)
matrix_y_obs <- correlation_matrix(y)
T0 <- sqrt(sum((matrix_x_obs - matrix_y_obs)^2))
# T0 <- 1 - sum(diag(matrix_x_obs*matrix_y_obs))/(norm(matrix_x_obs,"F")*norm(matrix_y_obs,"F"))
x_pooled <- rbind(x,y)
T_stat <- numeric(iter)
n <- dim(x_pooled)[1]
n1 <- dim(x)[1]
for(perm in 1:iter){
# Permutation:
permutation <- sample(1:n)
x_pooled_perm <- x_pooled[permutation,]
x_perm <- x_pooled_perm[1:n1,]
y_perm <- x_pooled_perm[(n1+1):n,]
matrix_x_perm <- correlation_matrix(x_perm)
matrix_y_perm <- correlation_matrix(y_perm)
T_stat[perm] <- sqrt(sum((matrix_x_perm - matrix_y_perm)^2))
# T_stat[perm] <- 1 - sum(diag(matrix_x_perm*matrix_y_perm))/(norm(matrix_x_perm,"F")*norm(matrix_y_perm,"F"))
}
#pvalue
p_val <- sum(na.omit(T_stat)>=T0)/(iter-sum(is.na(T_stat)))
p_val
idx_Var = 48
idx_Group = 70
groups = levels(df[,idx_Group])
# discard NA
idx_NA_Var = which(is.na(df[,idx_Var]))
idx_NA_Group = which(is.na(df[,idx_Group]))
if (length(idx_NA_Var)==0 & length(idx_NA_Group)==0){
Var_test = df[,idx_Var]
Group_test = df[,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)==0) {
Var_test = df[-idx_NA_Var,idx_Var]
Group_test = df[-idx_NA_Var,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)==0 & length(idx_NA_Group)!=0) {
Var_test = df[-idx_NA_Group,idx_Var]
Group_test = df[-idx_NA_Group,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)!=0) {
Var_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Var]
Group_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
x11()
boxplot(x,main=groups[1])
x11()
boxplot(y,main=groups[2])
perm_t_test_mean(x,y)
perm_t_test_median(x,y)
perm_anova(Var_test, Group_test)
threshold = 240
x = x[which(x <= threshold)]
y = y[which(y <= threshold)]
x11()
boxplot(x,main=groups[1])
x11()
boxplot(y,main=groups[2])
perm_t_test_mean(x,y)
perm_t_test_median(x,y)
perm_anova(Var_test, Group_test)
idx_Var = 50
idx_Group = 70
groups = levels(df[,idx_Group])
# discard NA
idx_NA_Var = which(is.na(df[,idx_Var]))
idx_NA_Group = which(is.na(df[,idx_Group]))
if (length(idx_NA_Var)==0 & length(idx_NA_Group)==0){
Var_test = df[,idx_Var]
Group_test = df[,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)==0) {
Var_test = df[-idx_NA_Var,idx_Var]
Group_test = df[-idx_NA_Var,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)==0 & length(idx_NA_Group)!=0) {
Var_test = df[-idx_NA_Group,idx_Var]
Group_test = df[-idx_NA_Group,idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
if(length(idx_NA_Var)!=0 & length(idx_NA_Group)!=0) {
Var_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Var]
Group_test = df[-c(idx_NA_Var, idx_NA_Group),idx_Group]
x = Var_test[which(Group_test ==groups[1])]
y = Var_test[which(Group_test ==groups[2])]
}
# Set threshold for numerical variable if wanted
threshold = 240
x = x[which(x <= threshold)]
y = y[which(y <= threshold)]
x11()
boxplot(x,main=groups[1])
x11()
boxplot(y,main=groups[2])
perm_t_test_mean(x,y)
perm_t_test_median(x,y)
perm_anova(Var_test, Group_test)
library(medicaldata)
df <- medicaldata::opt
setwd("C:/Users/matte/Desktop/NonParam_OPT_Project")
source("DATA PREPROCESSING.R")
is(df)
as.numeric(df$Group)
as.numeric(factor(df$Group,levels=c(0,1)))
factor(df$Group,levels=c(0,1))
df$Group
as.numeric(df$Group)
as.numeric(df$Group)-1
df$Public.Asstce
as.numeric(df$Public.Asstce)
as.numeric(df$Public.Asstce)-1
cov1 <- df$BMI # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
library(survival)
library(survminer)
library(dplyr)
library(ggplot2)
library(knitr)
library(broom)
n <- dim(df)[1]
times <- df[,176]  # Delivery times; unit of measure = days
lost_to_FU <- which(is.na(df[,70]))
censoring <- rep(0,n)
censoring[lost_to_FU] <- 1
censoring <- factor(censoring, labels = (c('Event', 'Censor')))
groups <- df$Group # select categorical variable significant for delivery times (see permutational inference results)
cov1 <- df$Bacteria5 # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov_values <- data.frame(cov1 = c(min(cov1[which(!is.na(cov1))]),mean(cov1[which(!is.na(cov1))]),max(cov1[which(!is.na(cov1))])))
KM_cov <- survfit(cox, newdata = cov_values)
x11()
plot(KM_cov, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
n <- dim(df[which(df$Group == 'C'),])[1]
times <- df[which(df$Group == 'C'),176]  # Delivery times; unit of measure = days
lost_to_FU <- which(is.na(df[which(df$Group == 'C'),70]))
censoring <- rep(0,n)
censoring[lost_to_FU] <- 1
censoring <- factor(censoring, labels = (c('Event', 'Censor')))
cov1 <- df$Bacteria5 # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
cov1 <- df$Bacteria5[which(df$Group == 'C'),] # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
cov1 <- df$Bacteria5[which(df$Group == 'C'),] # select covariates significant for the delivery time
df$Bacteria5[which(df$Group == 'C'),]
df$Bacteria5
cov1 <- df$Bacteria5[which(df$Group == 'C')] # select covariates significant for the delivery time
cov1
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
# Plot the survival curve for different values of a covariate
cov_values <- data.frame(cov1 = c(min(cov1[which(!is.na(cov1))]),mean(cov1[which(!is.na(cov1))]),max(cov1[which(!is.na(cov1))])))
KM_cov <- survfit(cox, newdata = cov_values)
x11()
plot(KM_cov, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
cov1 <- df$Bacteria[which(df$Group == 'C')] # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
summary(cox)
x11()
ggforest(cox, data = as.data.frame(cbind(cov1,times,censoring)))
cov1 <- scale(df$Bacteria[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
x11()
ggforest(cox, data = as.data.frame(cbind(cov1,times,censoring)))
# Plot the survival curve for different values of a covariate
cov_values_threshold <- data.frame(cov1_threshold = c(min(cov1_threshold[which(!is.na(cov1_threshold))]),mean(cov1_threshold[which(!is.na(cov1_threshold))]),max(cov1_threshold[which(!is.na(cov1_threshold))])))
KM_cov_threshold <- survfit(cox_threshold, newdata = cov_values_threshold)
x11()
plot(KM_cov_threshold, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
cov1 <- scale(df$Bacteria[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
x11()
ggforest(cox, data = as.data.frame(cbind(cov1,times,censoring)))
# Plot the survival curve for different values of a covariate
cov_values <- data.frame(cov1 = c(min(cov1[which(!is.na(cov1))]),mean(cov1[which(!is.na(cov1))]),max(cov1[which(!is.na(cov1))])))
KM_cov <- survfit(cox, newdata = cov_values)
x11()
plot(KM_cov, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
###
cov1 <- scale(df$Antibodies[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov_values <- data.frame(cov1 = c(min(cov1[which(!is.na(cov1))]),mean(cov1[which(!is.na(cov1))]),max(cov1[which(!is.na(cov1))])))
KM_cov <- survfit(cox, newdata = cov_values)
x11()
plot(KM_cov, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
cov1 <- df$Antibodies[which(df$Group == 'C')] # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov1 <- df$Antibodies5[which(df$Group == 'C')] # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov1 <- sclae(df$Antibodies5[which(df$Group == 'C')]) # select covariates significant for the delivery time
cov1 <- scale(df$Antibodies5[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov1 <- scale(df$Antibodies[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
x11()
nC <- dim(df[which(df$Group == 'C'),])[1]
timesC <- df[which(df$Group == 'C'),176]  # Delivery times; unit of measure = days
lost_to_FUC <- which(is.na(df[which(df$Group == 'C'),70]))
censoringC <- rep(0,n)
censoringC[lost_to_FUC] <- 1
censoringC <- factor(censoringC, labels = (c('Event', 'Censor')))
n <- dim(df[,])[1]
times <- df[,176]  # Delivery times; unit of measure = days
lost_to_FU <- which(is.na(df[,70]))
censoring <- rep(0,n)
censoring[lost_to_FU] <- 1
censoring <- factor(censoring, labels = (c('Event', 'Censor')))
groups <- df$Group # select categorical variable significant for delivery times (see permutational inference results)
# cov1 <- scale(df$Antibodies5[which(df$Group == 'C')]) # select covariates significant for the delivery time
cov1 <- scale(df$Antibodies5[]) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
# cov1 <- scale(df$Antibodies5[which(df$Group == 'C')]) # select covariates significant for the delivery time
cov1 <- scale(df$Antibodies[]) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
# cov1 <- scale(df$Antibodies5[which(df$Group == 'C')]) # select covariates significant for the delivery time
cov1 <- scale(df$BL.GE) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov1C <- scale(df$BL.GE[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(timesC, censoringC=="Event") ~ cov1C)
summary(cox)
cov1C <- scale(df$BL.CAL.avg[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(timesC, censoringC=="Event") ~ cov1C)
summary(cox)
cov1C <- scale(df$BL.PD.avg[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(timesC, censoringC=="Event") ~ cov1C)
summary(cox)
cov1 <- scale(df$BL.PD.avg[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(timesC, censoringC=="Event") ~ cov1)
summary(cox)
cov_values <- data.frame(cov1 = c(min(cov1[which(!is.na(cov1))]),mean(cov1[which(!is.na(cov1))]),max(cov1[which(!is.na(cov1))])))
KM_cov <- survfit(cox, newdata = cov_values)
x11()
plot(KM_cov, conf.int=F,
col=c("dodgerblue2","navy","darkmagenta"), lwd=2, lty=1,
xlab='Time [days]', ylab='Survival Probability',
main='Adjusted Survival Probability Plot')
grid()
legend('bottomleft', c("min", "mean", "max"),
lty=c(1,1,1), lwd=c(2,2,2), col=c("dodgerblue2","navy","darkmagenta"))
plot(df$BL.PD.avg, df$Group)
plot(df$BL.PD.avg, times)
plot(df$BL.Cal.avg, times)
plot(df$BL.GE, times)
plot(df$BL.Calc.I, times)
plot(df$BL..PD.5, times)
plot(df$BL.PD.5, times)
plot(df$Bacteria5, times)
plot(df$Bacteria, times)
help("scale")
sclae(df$Age, center = 1)
scale(df$Age, center = 1)
HRs <- list (Treat = 0.5,
Public.Asstce = 1.16,
Hypertension = 2.36,
Diabetes = 2.06,
Use.Tob = 1.32,
Age = 1.001,
BMI = 1.011)
risk <- (as.numeric(df$Group)-1)*HR$Treat + (as.numeric(df$Diabetes)-1)*HR$Diabetes + as.numeric(df$Hypertension)-1)*HR$Hypertension + as.numeric(df$Use.Tob)-1)*HR$Use.Tob + scale(df$Age,center=1)*HR$Age + scale(df$BMI,center=1)*HR$BMI;
risk <- (as.numeric(df$Group)-1)*HR$Treat + (as.numeric(df$Diabetes)-1)*HR$Diabetes + (as.numeric(df$Hypertension)-1)*HR$Hypertension + (as.numeric(df$Use.Tob)-1)*HR$Use.Tob + scale(df$Age,center=1)*HR$Age + scale(df$BMI,center=1)*HR$BMI;
HR <- list (Treat = 0.5,
Public.Asstce = 1.16,
Hypertension = 2.36,
Diabetes = 2.06,
Use.Tob = 1.32,
Age = 1.001,
BMI = 1.011)
ri
risk <- (as.numeric(df$Group)-1)*HR$Treat + (as.numeric(df$Diabetes)-1)*HR$Diabetes + (as.numeric(df$Hypertension)-1)*HR$Hypertension + (as.numeric(df$Use.Tob)-1)*HR$Use.Tob + scale(df$Age,center=1)*HR$Age + scale(df$BMI,center=1)*HR$BMI;
plot(risk, times)
cov1 <- scale(df$BL.GE[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(timesC, censoringC=="Event") ~ cov1)
summary(cox)
cov1 <- scale(df$BL.GE) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov1 <- scale(df$Bacteria[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(timesC, censoringC=="Event") ~ cov1)
summary(cox)
cov1 <- scale(df$Bacteria) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov1 <- scale(df$Bacteria5[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(timesC, censoringC=="Event") ~ cov1)
summary(cox)
cov1 <- scale(df$Bacteria5) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov1 <- scale(df$Antibodies5[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(timesC, censoringC=="Event") ~ cov1)
summary(cox)
cov1 <- scale(df$Antibodies5) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
cov1 <- scale(df$Antibodies[which(df$Group == 'C')]) # select covariates significant for the delivery time
cox <- coxph(Surv(timesC, censoringC=="Event") ~ cov1)
summary(cox)
cov1 <- scale(df$Antibodies) # select covariates significant for the delivery time
cox <- coxph(Surv(times, censoring=="Event") ~ cov1)
summary(cox)
HR <- list (Treat = 0.5,
Public.Asstce = 1.16,
Hypertension = 2.36,
Diabetes = 2.06,
Use.Tob = 1.32,
Age = 1.001,
BMI = 1.011,
BL.GE = 0.4356,
BL.PD.avg = 0.4965,
Bacteria = 0.8349,
Antibodies5 = 0.8937)
risk <- (as.numeric(df$Group)-1)*HR$Treat + (as.numeric(df$Diabetes)-1)*HR$Diabetes + (as.numeric(df$Hypertension)-1)*HR$Hypertension + (as.numeric(df$Use.Tob)-1)*HR$Use.Tob + scale(df$Age,center=1)*HR$Age + scale(df$BMI,center=1)*HR$BMI + scale(df$Bacteria,center=1)*HR$Bacteria + scale(df$Antibodies5,center=1)*HR$Antibodies5 + scale(df$BL.GE,center=1)*HR$BL.GE + scale(df$BL.PD.avg,center=1)*HR$BL.PD.avg
plot(risk, times)
risk
sum(is.na(df$Group))
sum(is.na(df$Hypertension))
sum(is.na(df$Diabetes))
sum(is.na(df$Use.Tob))
Use.Tob = (as.numeric(df$Use.Tob)-1),
Treat = (as.numeric(df$Group)-1),
Hypertension = (as.numeric(df$Hypertension)-1),
Diabetes = (as.numeric(df$Diabetes)-1),
Use.Tob = (as.numeric(df$Use.Tob)-1),
Age = scale(df$Age,center=1),
BMI = scale(df$BMI,center=1),
BL.GE = scale(df$BL.GE,center=1),
BL.PD.avg = scale(df$BL.PD.avg,center=1),
Bacteria = scale(df$Bacteria,center=1),
Antibodies5 = scale(df$Antibodies5center=1))
RiskFactor <- list(
Treat = (as.numeric(df$Group)-1),
Hypertension = (as.numeric(df$Hypertension)-1),
Diabetes = (as.numeric(df$Diabetes)-1),
Use.Tob = (as.numeric(df$Use.Tob)-1),
Age = scale(df$Age,center=1),
BMI = scale(df$BMI,center=1),
BL.GE = scale(df$BL.GE,center=1),
BL.PD.avg = scale(df$BL.PD.avg,center=1),
Bacteria = scale(df$Bacteria,center=1),
Antibodies5 = scale(df$Antibodies5center=1))
HR <- list (Treat = 0.5,
Hypertension = 2.36,
Diabetes = 2.06,
Use.Tob = 1.32,
Age = 1.001,
BMI = 1.011,
BL.GE = 0.4356,
BL.PD.avg = 0.4965,
Bacteria = 0.8349,
Antibodies5 = 0.8937)
RiskFactor <- list(Treat = (as.numeric(df$Group)-1),
Hypertension = (as.numeric(df$Hypertension)-1),
Diabetes = (as.numeric(df$Diabetes)-1),
Use.Tob = (as.numeric(df$Use.Tob)-1),
Age = scale(df$Age,center=1),
BMI = scale(df$BMI,center=1),
BL.GE = scale(df$BL.GE,center=1),
BL.PD.avg = scale(df$BL.PD.avg,center=1),
Bacteria = scale(df$Bacteria,center=1),
Antibodies5 = scale(df$Antibodies5center=1))
Treat = (as.numeric(df$Group)-1)
Hypertension = (as.numeric(df$Hypertension)-1)
Diabetes = (as.numeric(df$Diabetes)-1)
Use.Tob = (as.numeric(df$Use.Tob)-1)
Use.Tob
Use.Tob[is.na(Use.Tob)] <- 0
Use.Tob
HR <- list (Treat = 0.5,
Hypertension = 2.36,
Diabetes = 2.06,
Use.Tob = 1.32,
Age = 1.001,
BMI = 1.011,
BL.GE = 0.4356,
BL.PD.avg = 0.4965,
Bacteria = 0.8349,
Antibodies5 = 0.8937)
Treat = (as.numeric(df$Group)-1)
Treat[is.na(Treat)] <- 0
Hypertension = (as.numeric(df$Hypertension)-1)
Hypertension[is.na(Hypertension)] <- 0
Diabetes = (as.numeric(df$Diabetes)-1)
Diabetes[is.na(Diabetes)] <- 0
Use.Tob = (as.numeric(df$Use.Tob)-1)
Use.Tob[is.na(Use.Tob)] <- 0
Age = scale(df$Age,center=1)
Age[is.na(Age)] <- 0
BMI = scale(df$BMI,center=1)
BMI[is.na(BMI)] <- 0
BL.GE = scale(df$BL.GE,center=1)
BL.GE[is.na(BL.GE)] <- 0
BL.PD.avg = scale(df$BL.PD.avg,center=1)
BL.PD.avg[is.na(BL.PD.avg)] <- 0
Bacteria = scale(df$Bacteria,center=1)
Bacteria[is.na(Bacteria)] <- 0
Antibodies5 = scale(df$Antibodies5center=1)
Antibodies5[is.na(Antibodies5)] <- 0
Antibodies5 = scale(df$Antibodies5, center=1)
Antibodies5[is.na(Antibodies5)] <- 0
risk <- Treat*HR$Treat + Diabetes*HR$Diabetes + Hypertension*HR$Hypertension + Use.Tob*HR$Use.Tob + Age*HR$Age + BMI*HR$BMI + Bacteria*HR$Bacteria + Antibodies5*HR$Antibodies5 + BL.GE*HR$BL.GE + BL.PD.avg*HR$BL.PD.avg
plot(risk, times)
